// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/fattariello.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeInfos_NodeState int32

const (
	NodeInfos_STARTING NodeInfos_NodeState = 0
	NodeInfos_PENDING  NodeInfos_NodeState = 1
	NodeInfos_JOINING  NodeInfos_NodeState = 2
	NodeInfos_RUNNING  NodeInfos_NodeState = 3
	NodeInfos_LEAVING  NodeInfos_NodeState = 4
	NodeInfos_DEAD     NodeInfos_NodeState = 5
)

// Enum value maps for NodeInfos_NodeState.
var (
	NodeInfos_NodeState_name = map[int32]string{
		0: "STARTING",
		1: "PENDING",
		2: "JOINING",
		3: "RUNNING",
		4: "LEAVING",
		5: "DEAD",
	}
	NodeInfos_NodeState_value = map[string]int32{
		"STARTING": 0,
		"PENDING":  1,
		"JOINING":  2,
		"RUNNING":  3,
		"LEAVING":  4,
		"DEAD":     5,
	}
)

func (x NodeInfos_NodeState) Enum() *NodeInfos_NodeState {
	p := new(NodeInfos_NodeState)
	*p = x
	return p
}

func (x NodeInfos_NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeInfos_NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_fattariello_proto_enumTypes[0].Descriptor()
}

func (NodeInfos_NodeState) Type() protoreflect.EnumType {
	return &file_proto_fattariello_proto_enumTypes[0]
}

func (x NodeInfos_NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeInfos_NodeState.Descriptor instead.
func (NodeInfos_NodeState) EnumDescriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{5, 0}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fattariello_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fattariello_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{0}
}

type AckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckMessage string `protobuf:"bytes,1,opt,name=AckMessage,proto3" json:"AckMessage,omitempty"`
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fattariello_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fattariello_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{1}
}

func (x *AckResponse) GetAckMessage() string {
	if x != nil {
		return x.AckMessage
	}
	return ""
}

type JSONResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *JSONResponse) Reset() {
	*x = JSONResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fattariello_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSONResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSONResponse) ProtoMessage() {}

func (x *JSONResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fattariello_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSONResponse.ProtoReflect.Descriptor instead.
func (*JSONResponse) Descriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{2}
}

func (x *JSONResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message                []byte `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	DestinationNodeAddress string `protobuf:"bytes,2,opt,name=DestinationNodeAddress,proto3" json:"DestinationNodeAddress,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fattariello_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fattariello_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageRequest) GetDestinationNodeAddress() string {
	if x != nil {
		return x.DestinationNodeAddress
	}
	return ""
}

type ReceiveMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderNodeID      string `protobuf:"bytes,1,opt,name=SenderNodeID,proto3" json:"SenderNodeID,omitempty"`
	SenderNodeAddress string `protobuf:"bytes,2,opt,name=SenderNodeAddress,proto3" json:"SenderNodeAddress,omitempty"`
	Message           []byte `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ReceiveMessageRequest) Reset() {
	*x = ReceiveMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fattariello_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageRequest) ProtoMessage() {}

func (x *ReceiveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fattariello_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{4}
}

func (x *ReceiveMessageRequest) GetSenderNodeID() string {
	if x != nil {
		return x.SenderNodeID
	}
	return ""
}

func (x *ReceiveMessageRequest) GetSenderNodeAddress() string {
	if x != nil {
		return x.SenderNodeAddress
	}
	return ""
}

func (x *ReceiveMessageRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type NodeInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID         string              `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	NodeStatus     NodeInfos_NodeState `protobuf:"varint,2,opt,name=NodeStatus,proto3,enum=proto.NodeInfos_NodeState" json:"NodeStatus,omitempty"`
	NodeAddress    string              `protobuf:"bytes,3,opt,name=NodeAddress,proto3" json:"NodeAddress,omitempty"`
	PeersID        []string            `protobuf:"bytes,4,rep,name=PeersID,proto3" json:"PeersID,omitempty"`
	PeersAddresses []string            `protobuf:"bytes,5,rep,name=PeersAddresses,proto3" json:"PeersAddresses,omitempty"`
}

func (x *NodeInfos) Reset() {
	*x = NodeInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fattariello_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfos) ProtoMessage() {}

func (x *NodeInfos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fattariello_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfos.ProtoReflect.Descriptor instead.
func (*NodeInfos) Descriptor() ([]byte, []int) {
	return file_proto_fattariello_proto_rawDescGZIP(), []int{5}
}

func (x *NodeInfos) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeInfos) GetNodeStatus() NodeInfos_NodeState {
	if x != nil {
		return x.NodeStatus
	}
	return NodeInfos_STARTING
}

func (x *NodeInfos) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *NodeInfos) GetPeersID() []string {
	if x != nil {
		return x.PeersID
	}
	return nil
}

func (x *NodeInfos) GetPeersAddresses() []string {
	if x != nil {
		return x.PeersAddresses
	}
	return nil
}

var File_proto_fattariello_proto protoreflect.FileDescriptor

var file_proto_fattariello_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x61, 0x74, 0x74, 0x61, 0x72, 0x69, 0x65,
	0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2d, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x22, 0x0a, 0x0c, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x22, 0x66, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x15,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x9c, 0x02, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x65, 0x72, 0x73, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x65, 0x72, 0x73, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x4a, 0x4f, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x45, 0x41,
	0x56, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x41, 0x44, 0x10, 0x05,
	0x32, 0xf8, 0x01, 0x0a, 0x0b, 0x46, 0x61, 0x74, 0x74, 0x61, 0x72, 0x69, 0x65, 0x6c, 0x6c, 0x6f,
	0x12, 0x30, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x61, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x53, 0x4f,
	0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x48, 0x61, 0x6d, 0x6d, 0x6f, 0x6e,
	0x64, 0x39, 0x35, 0x2f, 0x46, 0x61, 0x74, 0x74, 0x61, 0x72, 0x69, 0x65, 0x6c, 0x6c, 0x6f, 0x44,
	0x42, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_fattariello_proto_rawDescOnce sync.Once
	file_proto_fattariello_proto_rawDescData = file_proto_fattariello_proto_rawDesc
)

func file_proto_fattariello_proto_rawDescGZIP() []byte {
	file_proto_fattariello_proto_rawDescOnce.Do(func() {
		file_proto_fattariello_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_fattariello_proto_rawDescData)
	})
	return file_proto_fattariello_proto_rawDescData
}

var file_proto_fattariello_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_fattariello_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_fattariello_proto_goTypes = []interface{}{
	(NodeInfos_NodeState)(0),      // 0: proto.NodeInfos.NodeState
	(*EmptyRequest)(nil),          // 1: proto.EmptyRequest
	(*AckResponse)(nil),           // 2: proto.AckResponse
	(*JSONResponse)(nil),          // 3: proto.JSONResponse
	(*SendMessageRequest)(nil),    // 4: proto.SendMessageRequest
	(*ReceiveMessageRequest)(nil), // 5: proto.ReceiveMessageRequest
	(*NodeInfos)(nil),             // 6: proto.NodeInfos
}
var file_proto_fattariello_proto_depIdxs = []int32{
	0, // 0: proto.NodeInfos.NodeStatus:type_name -> proto.NodeInfos.NodeState
	1, // 1: proto.Fattariello.getInfo:input_type -> proto.EmptyRequest
	1, // 2: proto.Fattariello.raftStats:input_type -> proto.EmptyRequest
	4, // 3: proto.Fattariello.sendMessage:input_type -> proto.SendMessageRequest
	5, // 4: proto.Fattariello.receiveMessage:input_type -> proto.ReceiveMessageRequest
	6, // 5: proto.Fattariello.getInfo:output_type -> proto.NodeInfos
	3, // 6: proto.Fattariello.raftStats:output_type -> proto.JSONResponse
	2, // 7: proto.Fattariello.sendMessage:output_type -> proto.AckResponse
	2, // 8: proto.Fattariello.receiveMessage:output_type -> proto.AckResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_fattariello_proto_init() }
func file_proto_fattariello_proto_init() {
	if File_proto_fattariello_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_fattariello_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fattariello_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fattariello_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSONResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fattariello_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fattariello_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fattariello_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_fattariello_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_fattariello_proto_goTypes,
		DependencyIndexes: file_proto_fattariello_proto_depIdxs,
		EnumInfos:         file_proto_fattariello_proto_enumTypes,
		MessageInfos:      file_proto_fattariello_proto_msgTypes,
	}.Build()
	File_proto_fattariello_proto = out.File
	file_proto_fattariello_proto_rawDesc = nil
	file_proto_fattariello_proto_goTypes = nil
	file_proto_fattariello_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FattarielloClient is the client API for Fattariello service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FattarielloClient interface {
	// Returns the Node Infos
	GetInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NodeInfos, error)
	RaftStats(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*JSONResponse, error)
	SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*AckResponse, error)
	ReceiveMessage(ctx context.Context, in *ReceiveMessageRequest, opts ...grpc.CallOption) (*AckResponse, error)
}

type fattarielloClient struct {
	cc grpc.ClientConnInterface
}

func NewFattarielloClient(cc grpc.ClientConnInterface) FattarielloClient {
	return &fattarielloClient{cc}
}

func (c *fattarielloClient) GetInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NodeInfos, error) {
	out := new(NodeInfos)
	err := c.cc.Invoke(ctx, "/proto.Fattariello/getInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fattarielloClient) RaftStats(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*JSONResponse, error) {
	out := new(JSONResponse)
	err := c.cc.Invoke(ctx, "/proto.Fattariello/raftStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fattarielloClient) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*AckResponse, error) {
	out := new(AckResponse)
	err := c.cc.Invoke(ctx, "/proto.Fattariello/sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fattarielloClient) ReceiveMessage(ctx context.Context, in *ReceiveMessageRequest, opts ...grpc.CallOption) (*AckResponse, error) {
	out := new(AckResponse)
	err := c.cc.Invoke(ctx, "/proto.Fattariello/receiveMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FattarielloServer is the server API for Fattariello service.
type FattarielloServer interface {
	// Returns the Node Infos
	GetInfo(context.Context, *EmptyRequest) (*NodeInfos, error)
	RaftStats(context.Context, *EmptyRequest) (*JSONResponse, error)
	SendMessage(context.Context, *SendMessageRequest) (*AckResponse, error)
	ReceiveMessage(context.Context, *ReceiveMessageRequest) (*AckResponse, error)
}

// UnimplementedFattarielloServer can be embedded to have forward compatible implementations.
type UnimplementedFattarielloServer struct {
}

func (*UnimplementedFattarielloServer) GetInfo(context.Context, *EmptyRequest) (*NodeInfos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (*UnimplementedFattarielloServer) RaftStats(context.Context, *EmptyRequest) (*JSONResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RaftStats not implemented")
}
func (*UnimplementedFattarielloServer) SendMessage(context.Context, *SendMessageRequest) (*AckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedFattarielloServer) ReceiveMessage(context.Context, *ReceiveMessageRequest) (*AckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveMessage not implemented")
}

func RegisterFattarielloServer(s *grpc.Server, srv FattarielloServer) {
	s.RegisterService(&_Fattariello_serviceDesc, srv)
}

func _Fattariello_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FattarielloServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fattariello/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FattarielloServer).GetInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fattariello_RaftStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FattarielloServer).RaftStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fattariello/RaftStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FattarielloServer).RaftStats(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fattariello_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FattarielloServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fattariello/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FattarielloServer).SendMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fattariello_ReceiveMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FattarielloServer).ReceiveMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fattariello/ReceiveMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FattarielloServer).ReceiveMessage(ctx, req.(*ReceiveMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Fattariello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Fattariello",
	HandlerType: (*FattarielloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getInfo",
			Handler:    _Fattariello_GetInfo_Handler,
		},
		{
			MethodName: "raftStats",
			Handler:    _Fattariello_RaftStats_Handler,
		},
		{
			MethodName: "sendMessage",
			Handler:    _Fattariello_SendMessage_Handler,
		},
		{
			MethodName: "receiveMessage",
			Handler:    _Fattariello_ReceiveMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/fattariello.proto",
}
