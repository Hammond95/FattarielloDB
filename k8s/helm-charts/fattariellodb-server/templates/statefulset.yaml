{{- if eq .Values.releaseType "StatefulSet" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{.Release.Name}}"
  labels:
    app: fattariello-db-server
spec:
  serviceName: "{{ .Release.Name }}-fattariello-db-server"
  selector:
    matchLabels:
      app: fattariello-db-server
  replicas: {{.Values.replicas}}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: fattariello-db-server
    spec:
      volumes:
        - name: fattariello-db-server-pvc
          persistentVolumeClaim:
            claimName: '{{.Release.Name}}-fattariello-db-server-pvc'
      containers:
        - name: fattariellodb-server
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 8888
              protocol: TCP
          volumeMounts:
            - name: fattariello-db-server-pvc
              mountPath: /mnt
              subPath: /db
          #securityContext:
          #  runAsGroup: 999
          #  runAsNonRoot: true
      serviceAccountName: fattariello-db-server-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - web
                topologyKey: kubernetes.io/hostname
{{- end }}
